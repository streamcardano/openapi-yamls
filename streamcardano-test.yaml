components:
  schemas:
    AppStatus:
      properties:
        errors:
          items:
            description: Arbitrary json
            title: json
          type: array
        result:
          properties:
            app_version_info:
              $ref: '#/components/schemas/AppVersion'
            database_triggers:
              items:
                $ref: '#/components/schemas/AppTrigger'
              type: array
            pgbouncer_working:
              type: boolean
            postgres_working:
              type: boolean
            sync_status:
              $ref: '#/components/schemas/DiffTime'
          required:
          - postgres_working
          - pgbouncer_working
          - database_triggers
          - sync_status
          - app_version_info
          type: object
      required:
      - result
      - error
      type: object
    AppTrigger:
      properties:
        errors:
          items:
            description: Arbitrary json
            title: json
          type: array
        result:
          properties:
            triggerEventManipulation:
              type: string
            triggerEventTable:
              type: string
            triggerName:
              type: string
          required:
          - triggerEventTable
          - triggerName
          - triggerEventManipulation
          type: object
      required:
      - result
      - error
      type: object
    AppVersion:
      properties:
        appCommit:
          type: string
        appVersion:
          type: string
        envName:
          $ref: '#/components/schemas/BuildEnvironment'
      required:
      - appVersion
      - appCommit
      - envName
      type: object
    BuildEnvironment:
      enum:
      - ProductionEnv
      - StagingEnv
      - TestEnv
      - BetaEnv
      type: string
    CustomQueryResult:
      oneOf:
      - properties:
          block_no:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          epoch_no:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          epoch_slot_no:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          hash:
            type: string
          id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          op_cert:
            type: string
          op_cert_counter:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          previous_id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          proto_major:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          proto_minor:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          size:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          slot_leader_id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          slot_no:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          time:
            type: string
          tx_count:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          vrf_key:
            type: string
        required:
        - block_no
        - epoch_no
        - epoch_slot_no
        - hash
        - id
        - previous_id
        - proto_major
        - proto_minor
        - size
        - slot_leader_id
        - slot_no
        - time
        - tx_count
        type: object
      - properties:
          block_id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          block_index:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          deposit:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          fee:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          hash:
            type: string
          id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          invalid_before:
            format: double
            type: number
          invalid_hereafter:
            format: double
            type: number
          out_sum:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          script_size:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          size:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          valid_contract:
            type: boolean
        required:
        - block_id
        - block_index
        - deposit
        - fee
        - hash
        - id
        - out_sum
        - script_size
        - size
        - valid_contract
        type: object
      - description: Arbitrary json
        title: json
      type: object
    DiffTime:
      format: PyYmMdDThHmMs[.sss]S
      type: string
    InvalidQueryError:
      properties:
        errors:
          oneOf:
          - enum:
            - EmptyQueryError
            type: string
          - properties:
              forbiddenQueryOriginalQuery:
                type: string
            required:
            - forbiddenQueryOriginalQuery
            type: object
          - properties:
              invalidQueryError:
                type: string
            required:
            - invalidQueryError
            type: object
          type: object
        result:
          items:
            description: Arbitrary json
            title: json
          type: array
      required:
      - result
      - error
      type: object
    Param:
      description: type is either int8 or str
      format: value:type
      type: string
    PrometheusMetrics:
      properties:
        mainMetrics:
          type: string
      required:
      - mainMetrics
      type: object
    SqlDebugOutput:
      properties:
        errors:
          items:
            description: Arbitrary json
            title: json
          type: array
        result:
          properties:
            compile_time:
              format: double
              type: number
            explain:
              items:
                type: string
              type: array
            orig_sql:
              type: string
            params:
              items:
                $ref: '#/components/schemas/Param'
              type: array
            results:
              items:
                $ref: '#/components/schemas/CustomQueryResult'
              type: array
            sql:
              type: string
          required:
          - sql
          - orig_sql
          - params
          - compile_time
          - explain
          - results
          type: object
      required:
      - result
      - error
      type: object
    SqlQueryError:
      properties:
        errors:
          properties:
            sqlQueryError:
              type: string
          required:
          - sqlQueryError
          type: object
        result:
          items:
            description: Arbitrary json
            title: json
          type: array
      required:
      - result
      - error
      type: object
    WalletDebugOutput:
      properties:
        errors:
          items:
            description: Arbitrary json
            title: json
          type: array
        result:
          properties:
            walletCount:
              maximum: 9223372036854775807
              minimum: -9223372036854775808
              type: integer
          required:
          - walletCount
          type: object
      required:
      - result
      - error
      type: object
info:
  description: This is an API for the StreamChain service
  license:
    name: MIT
  title: StreamChain API
  version: '1.0'
openapi: 3.0.0
paths:
  /admin/db_size:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: string
          description: ''
  /admin/prometheus:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PrometheusMetrics'
          description: ''
  /admin/sync_status/behind_by:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/DiffTime'
          description: ''
  /api/v1/debug/query:
    post:
      parameters:
      - in: query
        name: blocks
        required: false
        schema:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
      - in: query
        name: params
        schema:
          items:
            description: type is either int8 or str
            format: value:type
            type: string
          type: array
      requestBody:
        content:
          text/plain;charset=utf-8:
            schema:
              type: string
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SqlDebugOutput'
          description: ''
        '400':
          description: Invalid `params` or `blocks` or `body`
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: ''
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SqlQueryError'
          description: ''
  /api/v1/debug/wallet:
    post:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/WalletDebugOutput'
          description: ''
  /api/v1/last/block:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                maximum: 9223372036854775807
                minimum: -9223372036854775808
                type: integer
          description: ''
  /api/v1/last/slot_no:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                maximum: 9223372036854775807
                minimum: -9223372036854775808
                type: integer
          description: ''
  /api/v1/last/tx:
    get:
      parameters:
      - in: query
        name: script
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: string
          description: ''
        '400':
          description: Invalid `script`
  /api/v1/query:
    post:
      parameters:
      - in: query
        name: blocks
        required: false
        schema:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
      - in: query
        name: params
        schema:
          items:
            description: type is either int8 or str
            format: value:type
            type: string
          type: array
      requestBody:
        content:
          text/plain;charset=utf-8:
            schema:
              type: string
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                properties:
                  errors:
                    items:
                      description: Arbitrary json
                      title: json
                    type: array
                  result:
                    items:
                      $ref: '#/components/schemas/CustomQueryResult'
                    type: array
                required:
                - result
                - error
                type: object
          description: ''
        '400':
          description: Invalid `params` or `blocks` or `body`
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: ''
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SqlQueryError'
          description: ''
  /api/v1/sse:
    post:
      responses:
        '200':
          content:
            text/event-stream:
              schema:
                description: A server-sent event stream. This isn't strictly compatible
                  with OpenApi spec. Also see https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events
                format: event-stream
                items:
                  properties:
                    data:
                      description: Arbitrary json
                      title: json
                    event:
                      enum:
                      - new_block
                      - rollback
                      type: string
                  type: object
                type: array
          description: Returns events describing new blocks
      summary: Listen to new blocks on the chain
    summary: Server-sent events for new blocks
  /api/v1/sse/blocks: {}
  /api/v1/status:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AppStatus'
          description: ''
