components:
  schemas:
    AppStatus:
      properties:
        errors:
          items:
            description: Arbitrary JSON value
            title: JSON
          type: array
        result:
          description: Status information about this backend application and attached
            services.
          properties:
            app_version_info:
              $ref: '#/components/schemas/AppVersion'
            database_triggers:
              description: Database triggers set for the application.
              items:
                $ref: '#/components/schemas/AppTrigger'
              type: array
            network_name:
              description: Name of the current connected Cardano network.
              type: string
            pgbouncer_working:
              $ref: '#/components/schemas/ComponentStatus'
            postgres_working:
              $ref: '#/components/schemas/ComponentStatus'
            sync_behind_by:
              description: How much time is our Cardano node behind the network?
              type: string
            wcontroller_status:
              $ref: '#/components/schemas/WalletControllerStatus'
          required:
          - postgres_working
          - pgbouncer_working
          - database_triggers
          - wcontroller_status
          - app_version_info
          - network_name
          type: object
      required:
      - result
      - error
      type: object
    AppTrigger:
      description: Properties of each loaded database trigger.
      properties:
        event_manipulation:
          description: Target action for the trigger.
          type: string
        event_table:
          description: Type of event the trigger is listening to.
          type: string
        name:
          description: Trigger name.
          type: string
      required:
      - event_table
      - name
      - event_manipulation
      type: object
    AppVersion:
      description: Version information about this backend application.
      properties:
        app_commit:
          $ref: '#/components/schemas/CommitHash'
        app_commit_time:
          $ref: '#/components/schemas/TimestampAndAge'
        app_compile_time:
          $ref: '#/components/schemas/TimestampAndAge'
        app_up_time:
          $ref: '#/components/schemas/TimestampAndAge'
        app_version:
          $ref: '#/components/schemas/Version'
        env_name:
          $ref: '#/components/schemas/BuildEnvironment'
      required:
      - app_version
      - app_commit
      - env_name
      - app_compile_time
      - app_up_time
      type: object
    Block:
      properties:
        block_no:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        hash:
          type: string
        id:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        time:
          $ref: '#/components/schemas/LocalTime'
      required:
      - id
      - block_no
      - hash
      - time
      type: object
    BlockchainOperation:
      enum:
      - NEWBLOCK
      - ROLLBACK
      type: string
    BuildEnvironment:
      enum:
      - ProductionEnv
      - StagingEnv
      - TestEnv
      - BetaEnv
      type: string
    CommitHash:
      type: string
    ComponentStatus:
      oneOf:
      - type: string
      - type: string
      type: object
    CustomQueryResult:
      description: Results for custom queries. The particular row schema depends on
        the target database table.
      oneOf:
      - properties:
          block_no:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          epoch_no:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          epoch_slot_no:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          hash:
            type: string
          id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          op_cert:
            type: string
          op_cert_counter:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          previous_id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          proto_major:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          proto_minor:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          size:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          slot_leader_id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          slot_no:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          time:
            type: string
          tx_count:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          vrf_key:
            type: string
        required:
        - id
        - hash
        - epoch_no
        - slot_no
        - epoch_slot_no
        - block_no
        - previous_id
        - slot_leader_id
        - size
        - time
        - tx_count
        - proto_major
        - proto_minor
        type: object
      - properties:
          block_id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          block_index:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          deposit:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          fee:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          hash:
            type: string
          id:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          invalid_before:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          invalid_hereafter:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          out_sum:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          script_size:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          size:
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            type: integer
          valid_contract:
            type: boolean
        required:
        - id
        - hash
        - block_id
        - block_index
        - out_sum
        - fee
        - deposit
        - size
        - valid_contract
        - script_size
        type: object
      - description: Arbitrary JSON value
        title: JSON
      type: object
    DiffTime:
      format: PyYmMdDThHmMs[.sss]S
      type: string
    InvalidQueryError:
      properties:
        errors:
          oneOf:
          - enum:
            - EmptyQueryError
            type: string
          - properties:
              forbiddenQueryOriginalQuery:
                type: string
            required:
            - forbiddenQueryOriginalQuery
            type: object
          - properties:
              invalidQueryError:
                type: string
            required:
            - invalidQueryError
            type: object
          type: object
        result:
          items:
            description: Arbitrary JSON value
            title: JSON
          type: array
      required:
      - result
      - error
      type: object
    LocalTime:
      example: 2016-07-22T07:40:00
      format: yyyy-mm-ddThh:MM:ss
      type: string
    Param:
      description: type is either int8 or str
      format: value:type
      type: string
    PrometheusMetrics:
      description: Prometheus metrics that can be interpreted by the visualizer
      format: Prometheus metrics format
      type: string
    SqlDebugOutput:
      properties:
        errors:
          items:
            description: Arbitrary JSON value
            title: JSON
          type: array
        result:
          description: Debug information on a custom SQL database query.
          properties:
            compile_time:
              description: Time to compile the SQL query, in seconds.
              format: double
              type: number
            explain:
              description: PostgreSQL explanation of the query.
              items:
                type: string
              type: array
            orig_sql:
              description: Original SQL query, as sent in the request.
              type: string
            params:
              description: Query parameters given as input.
              items:
                $ref: '#/components/schemas/Param'
              type: array
            results:
              description: Query results.
              items:
                $ref: '#/components/schemas/CustomQueryResult'
              type: array
            sql:
              description: Original SQL query, after parsing.
              type: string
          required:
          - sql
          - orig_sql
          - params
          - compile_time
          - explain
          - results
          type: object
      required:
      - result
      - error
      type: object
    SqlQueryError:
      properties:
        errors:
          properties:
            sqlQueryError:
              type: string
          required:
          - sqlQueryError
          type: object
        result:
          items:
            description: Arbitrary JSON value
            title: JSON
          type: array
      required:
      - result
      - error
      type: object
    TimestampAndAge:
      properties:
        absolute:
          $ref: '#/components/schemas/UTCTime'
        relative:
          type: string
      required:
      - absolute
      - relative
      type: object
    UTCTime:
      example: 2016-07-22T00:00:00Z
      format: yyyy-mm-ddThh:MM:ssZ
      type: string
    Version:
      type: string
    WalletControllerStatus:
      properties:
        errors:
          items:
            description: Arbitrary JSON value
            title: JSON
          type: array
        result:
          properties:
            count:
              $ref: '#/components/schemas/ComponentStatus'
            creation_cycle:
              $ref: '#/components/schemas/ComponentStatus'
            transaction_test:
              $ref: '#/components/schemas/ComponentStatus'
          required:
          - count
          - creation_cycle
          - transaction_test
          type: object
      required:
      - result
      - error
      type: object
info:
  description: This is an API for the StreamCardano service
  license:
    name: MIT
  title: StreamCardano API
  version: 0.7.4.0
openapi: 3.0.0
paths:
  /api/v1/sse:
    post:
      responses:
        '200':
          content:
            text/event-stream:
              schema:
                description: A server-sent event stream. This isn't strictly compatible
                  with OpenApi spec. Also see https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events
                format: event-stream
                items:
                  properties:
                    operation:
                      $ref: '#/components/schemas/BlockchainOperation'
                    record:
                      $ref: '#/components/schemas/Block'
                  required:
                  - operation
                  - record
                  type: object
                type: array
          description: Returns events describing new blocks
      summary: Listen to new blocks on the chain
    summary: Server-sent events for new blocks
  /api/v1/sse/blocks: {}
  /api/v1/query:
    post:
      parameters:
      - in: query
        name: blocks
        required: false
        schema:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
      - in: query
        name: params
        schema:
          items:
            description: value with the PG SQL type, currently we support either ':int8'
              and ':str'
            format: value:type
            type: string
          type: array
      requestBody:
        content:
          text/plain;charset=utf-8:
            schema:
              type: string
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                properties:
                  errors:
                    items:
                      description: Arbitrary JSON value
                      title: JSON
                    type: array
                  result:
                    items:
                      $ref: '#/components/schemas/CustomQueryResult'
                    type: array
                required:
                - result
                - error
                type: object
          description: ''
        '400':
          description: Invalid `params` or `blocks` or `body`
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: ''
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SqlQueryError'
          description: ''
      summary: 'Custom database query endpoint. Requires Dev, Production or Staging
        access: callable via software or human operators. Run a custom database query
        and retrieve its results.'
  /api/v1/status:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AppStatus'
          description: ''
      summary: Retrieve status information about the backend. Does not require authentication.
  /api/v1/last/block:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                maximum: 9223372036854775807
                minimum: -9223372036854775808
                type: integer
          description: ''
      summary: Default database query endpoint, for basic information about the network.
        Unauthenticated users can access this endpoint. Get the number of the last
        block.
  /api/v1/last/slot_no:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                maximum: 9223372036854775807
                minimum: -9223372036854775808
                type: integer
          description: ''
      summary: Default database query endpoint, for basic information about the network.
        Unauthenticated users can access this endpoint. Get the number of the last
        slot.
  /api/v1/last/tx:
    get:
      parameters:
      - in: query
        name: script
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: string
          description: ''
        '400':
          description: Invalid `script`
      summary: Default database query endpoint, for basic information about the network.
        Unauthenticated users can access this endpoint. Get the last transaction hash.
  /api/v1/stream:
    post:
      responses:
        '200':
          content:
            text/event-stream:
              schema:
                description: A server-sent event stream. This isn't strictly compatible
                  with OpenApi spec. Also see https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events
                format: event-stream
                items:
                  properties:
                    operation:
                      $ref: '#/components/schemas/BlockchainOperation'
                    record:
                      $ref: '#/components/schemas/Block'
                  required:
                  - operation
                  - record
                  type: object
                type: array
          description: Returns events describing new blocks
      summary: Listen to new blocks on the chain
    summary: Server-sent events for new blocks
  /api/v1/debug/query:
    post:
      parameters:
      - in: query
        name: blocks
        required: false
        schema:
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
      - in: query
        name: params
        schema:
          items:
            description: value with the PG SQL type, currently we support either ':int8'
              and ':str'
            format: value:type
            type: string
          type: array
      requestBody:
        content:
          text/plain;charset=utf-8:
            schema:
              type: string
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SqlDebugOutput'
          description: ''
        '400':
          description: Invalid `params` or `blocks` or `body`
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: ''
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SqlQueryError'
          description: ''
      summary: 'Debug endpoint: probe and tinker. Requires Dev access: only for human
        operators. Run a custom database query and retrieve its results along with
        aditional debug information.'
  /api/v1/debug/sync_status/behind_by:
    get:
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/DiffTime'
          description: ''
      summary: 'Debug endpoint: probe and tinker. Requires Dev access: only for human
        operators. Check by how much time our Cardano node is behind the network.'
